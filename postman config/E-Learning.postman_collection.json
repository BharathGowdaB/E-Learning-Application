{
	"info": {
		"_postman_id": "c29c12ef-531b-4395-83e4-57c68e2e116f",
		"name": "E-Learning",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25897485"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "Get Course By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('reterived successfully' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/course/id/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"id",
								"{{courseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Instructor By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('reterived successfully' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/id/{{instructorId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"id",
								"{{instructorId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Module By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('reterived successfully' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/course/module/id/{{moduleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"module",
								"id",
								"{{moduleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Instructor Course List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('reterived successfully' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/id/{{instructorId}}/courseList?limit=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"id",
								"{{instructorId}}",
								"courseList"
							],
							"query": [
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Student Avatar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/student/id/{{studentId}}/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"id",
								"{{studentId}}",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Instructor Avatar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/id/{{instructorId}}/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"id",
								"{{instructorId}}",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Course Poster",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/course/id/{{courseId}}/poster",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"id",
								"{{courseId}}",
								"poster"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			],
			"auth": {
				"type": "noauth"
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Instructor",
			"item": [
				{
					"name": "Create Instructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set('authToken', pm.response.json().token)\r",
									"    pm.environment.set('instructorId', pm.response.json().instructor._id)\r",
									"}\r",
									"\r",
									"pm.test('instructor created' , function(){\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" pm.environment.set('count' , parseInt(pm.environment.get('count')) + 1 )\r",
									"pm.environment.set('instructorEmail' , 'bharath'+ parseInt(pm.environment.get('count')) +'@gmail.com')"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Bharath\",\r\n    \"lastname\" : \"Gowda B\",\r\n    \"email\" : \"{{instructorEmail}}\",\r\n    \"password\" : \"231020\",\r\n    \"phone\" : \"9900783185\",\r\n    \"university\" : \"BIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/instructor",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Instructor Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){\r",
									"    pm.environment.set('authToken', pm.response.json().token)\r",
									"    pm.environment.set('instructorId', pm.response.json().instructor._id)\r",
									"}\r",
									"\r",
									"pm.test('instructor authenticated' , function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"{{instructorEmail}}\",\r\n    \"password\" : \"231020\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/instructor/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Instructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor logout' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogoutAll Instructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor logout-all' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/logoutAll",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"logoutAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Course",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('count' , parseInt(pm.environment.get('count')) + 1 )\r",
									"pm.environment.set('courseTitle' , 'Java' + parseInt(pm.environment.get('count')))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set('courseId', pm.response.json().course._id)\r",
									"}\r",
									"\r",
									"pm.test('course created' , function() {\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\" : \"{{courseTitle}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/course",
							"host": [
								"{{url}}"
							],
							"path": [
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set('moduleId', pm.response.json().module._id)\r",
									"}\r",
									"\r",
									"pm.test('module create' , function() {\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"chapter\" : \"Introduction\",\r\n    \"content\" : \"<h1>Into</h1>\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/course/{{courseId}}/module",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor details' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Course List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor details' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/me/courseList?sortBy=title:desc",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"me",
								"courseList"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "title:desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Course Student List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/course/{{courseId}}/studentList?limit=4",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"studentList"
							],
							"query": [
								{
									"key": "limit",
									"value": "4"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Instructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor update' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Bharath 23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/instructor/",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Password Reset",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('instructor update' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"oldPassword\" : \"231020\",\r\n    \"newPassword\" : \"2310200\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/instructor/password",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"password"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar uploaded' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"type": "file",
									"src": "/C:/Users/Bharath Gowda B/Pictures/Screenshot 2022-07-07 190124.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/instructor/me/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload  Course Poster",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar uploaded' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "poster",
									"type": "file",
									"src": "/C:/Users/Bharath Gowda B/Pictures/pptscreen.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/course/{{courseId}}/poster",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"poster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('course update' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"description\" : \"welcome205745\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/course/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('module update' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"content\": \"<h1>sdhj\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/course/{{courseId}}/module/{{moduleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"module",
								"{{moduleId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar deleted' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/instructor/me/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"instructor",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Course Poster",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar deleted' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/course/{{courseId}}/poster",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"poster"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('course delete' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/course/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('module delete' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/course/{{courseId}}/module/{{moduleId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"course",
								"{{courseId}}",
								"module",
								"{{moduleId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Student",
			"item": [
				{
					"name": "Create Student",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set('count' ,parseInt(pm.environment.get('count')) + 1 )\r",
									"pm.environment.set('studentEmail' , 'yashu' +  parseInt(pm.environment.get('count'))+'@gmail.com')"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 201){\r",
									"    pm.environment.set('authToken2', pm.response.json().token)\r",
									"    pm.environment.set('studentId', pm.response.json().student._id)\r",
									"}\r",
									"\r",
									"pm.test('student created' , function() {\r",
									"    pm.response.to.have.status(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Bharath\",\r\n    \"lastname\" : \"Gowda B\",\r\n    \"email\" : \"{{studentEmail}}\",\r\n    \"password\" : \"231020\",\r\n    \"phone\" : \"9900783185\",\r\n    \"university\" : \"BIT\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/student/",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Student Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.code == 200){\r",
									"    pm.environment.set('authToken2', pm.response.json().token)\r",
									"    pm.environment.set('studentId', pm.response.json().student._id)    \r",
									"}\r",
									"\r",
									"pm.test('student authenticated' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"{{studentEmail}}\",\r\n    \"password\" : \"231020\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/student/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logout Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student logout' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/student/logout",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogoutAll Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student logout-all' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{url}}/student/logoutAll",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"logoutAll"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student details' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/student/me",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Course List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student course-list' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/student/me/courselist?sortBy=createdAt:desc&limit=1",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"me",
								"courselist"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt:desc"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student update' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstname\" : \"Bharath23\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/student/",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload Avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar uploaded' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "avatar",
									"type": "file",
									"src": "/C:/Users/Bharath Gowda B/Pictures/Screenshot 2022-07-01 145544.png"
								}
							]
						},
						"url": {
							"raw": "{{url}}/student/me/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student course added' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "{{url}}/student/addCourse/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"addCourse",
								"{{courseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Avatar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('avatar deleted' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/student/me/avatar",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"me",
								"avatar"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('student course deleted' , function() {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/student/removeCourse/{{courseId}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"student",
								"removeCourse",
								"{{courseId}}"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken2}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest"
				},
				{
					"listen": "test"
				}
			]
		},
		{
			"name": "Dev",
			"item": [
				{
					"name": "Delete All Student",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('deleted successfully', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/student",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"student"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Instructor",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('deleted successfully', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/instructor",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"instructor"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('deleted successfully', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/course",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"course"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Module",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('deleted successfully', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/module",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"module"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Student Course",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('deleted successfully', () => {\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/admin/studentCourse",
							"host": [
								"{{url}}"
							],
							"path": [
								"admin",
								"studentCourse"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{authToken}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}